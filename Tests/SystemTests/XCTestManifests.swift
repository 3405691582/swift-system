#if !canImport(ObjectiveC)
import XCTest

extension ErrnoTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ErrnoTest = [
        ("testConstants", testConstants),
        ("testPatternMatching", testPatternMatching),
    ]
}

extension FileDescriptorTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileDescriptorTest = [
        ("testConstants", testConstants),
    ]
}

extension FileOperationsTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileOperationsTest = [
        ("testAdHocOpen", testAdHocOpen),
        ("testHelpers", testHelpers),
        ("testSyscalls", testSyscalls),
    ]
}

extension FilePathTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FilePathTest = [
        ("testFilePath", testFilePath),
    ]
}

extension FilePermissionsTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FilePermissionsTest = [
        ("testPermissions", testPermissions),
    ]
}

extension MockingTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MockingTest = [
        ("testMocking", testMocking),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ErrnoTest.__allTests__ErrnoTest),
        testCase(FileDescriptorTest.__allTests__FileDescriptorTest),
        testCase(FileOperationsTest.__allTests__FileOperationsTest),
        testCase(FilePathTest.__allTests__FilePathTest),
        testCase(FilePermissionsTest.__allTests__FilePermissionsTest),
        testCase(MockingTest.__allTests__MockingTest),
    ]
}
#endif
